// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exercise_rr_samples.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "google/GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PbDuration;
@class PbRROffline;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ExerciseRrSamplesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ExerciseRrSamplesRoot : GPBRootObject
@end

#pragma mark - PbRROffline

typedef GPB_ENUM(PbRROffline_FieldNumber) {
  PbRROffline_FieldNumber_StartTime = 1,
  PbRROffline_FieldNumber_TimeInterval = 2,
};

@interface PbRROffline : GPBMessage

/** Start time / offset from the beginning of the exercise */
@property(nonatomic, readwrite, strong, null_resettable) PbDuration *startTime;
/** Test to see if @c startTime has been set. */
@property(nonatomic, readwrite) BOOL hasStartTime;

/** Duration of the offline period */
@property(nonatomic, readwrite, strong, null_resettable) PbDuration *timeInterval;
/** Test to see if @c timeInterval has been set. */
@property(nonatomic, readwrite) BOOL hasTimeInterval;

@end

#pragma mark - PbExerciseRRIntervals

typedef GPB_ENUM(PbExerciseRRIntervals_FieldNumber) {
  PbExerciseRRIntervals_FieldNumber_RrIntervalsArray = 1,
  PbExerciseRRIntervals_FieldNumber_RrSensorOfflineArray = 2,
};

/**
 *
 * RR intervals of the exercise.
 * ! All fields are required.
 **/
@interface PbExerciseRRIntervals : GPBMessage

/** rr intervals in milliseconds */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *rrIntervalsArray;
/** The number of items in @c rrIntervalsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rrIntervalsArray_Count;

/**
 * Contains information about periods when there has not been a connection to a rr interval sensor
 * rr_intervals fields will be always written into the file and offline fields are additional
 * information for marking periods as offline periods
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PbRROffline*> *rrSensorOfflineArray;
/** The number of items in @c rrSensorOfflineArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rrSensorOfflineArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
